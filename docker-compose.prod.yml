version: '3.7'

services:
  redis:
    container_name: redis
    hostname: redis
    image: redis:alpine
    command: redis-server
    expose:
      - 6379
    networks:
      - main
    restart: always
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - ./.env.db
    networks:
      - main
    restart: always
  django:
    container_name: django
    hostname: django
    image: localize-django
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    command: sh -c "python manage.py migrate --no-input && gunicorn localize.wsgi:application --workers 3 -b 0:8000"
    volumes:
      - users_files:/usr/src/back/users/
    expose:
      - 8000
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
    networks:
      - main
    restart: always
  celery-worker:
    container_name: celery-worker
    hostname: celery-worker
    image: localize-django
    command: celery -A localize worker -l INFO
    env_file:
      - ./.env.dev
    depends_on:
      - django
      - redis
    networks:
      - main
    restart: always
  celery-beat:
    container_name: celery-beat
    hostname: celery-beat
    image: localize-django
    command: celery -A localize beat -l INFO
    env_file:
      - ./.env.dev
    depends_on:
      - django
      - redis
    networks:
      - main
    restart: always
  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/usr/share/nginx/html
    environment: 
      - REACT_APP_API_URL=http://127.0.0.1:8000/api
    ports:
      - 80:80
      - 8000:8000
    depends_on:
      - django
    networks:
      - main
    restart: always

volumes:
  postgres_data:
  users_files:
  static_volume:

networks:
  main:
