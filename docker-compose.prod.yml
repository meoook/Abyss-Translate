version: '3.7'

services:
  redis:
    image: redis:alpine
    command: redis-server
    expose:
      - 6379
    networks:
      - main
    restart: always
  postgres:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - ./.env.db
    networks:
      - main
    restart: always
  django:
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    command: sh -c "python manage.py migrate --no-input && gunicorn trans_back.wsgi --workers 3 -b 0.0.0.0:8000"
    volumes:
      - ./back/:/usr/src/back/
      - users_files:/usr/src/back/users/
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - postgres
    networks:
      - main
    restart: always
  celery:
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    command: celery -A trans_back worker -l INFO
    volumes:
      - ./back/:/usr/src/back/
    env_file:
      - ./.env
    depends_on:
      - django
      - redis
    networks:
      - main
    restart: always
  celery-beat:
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    command: celery -A trans_back beat -l INFO
    volumes:
      - ./back/:/usr/src/back/
    env_file:
      - ./.env
    depends_on:
      - django
      - redis
    networks:
      - main
    restart: always
  nginx:
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/usr/share/nginx/html
    ports:
      - 80:80
    environment:
      - BACKEND_API_URL=http://localhost:8000/api
    depends_on:
      - django
  networks:
    - main
  restart: always

volumes:
  postgres_data:
  users_files:
  static_volume:

networks:
  main:
