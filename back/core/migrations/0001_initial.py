# Generated by Django 3.1.3 on 2020-11-20 11:40

from django.conf import settings
import django.contrib.postgres.indexes
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import core.services.os_delete

import uuid

from django.conf.global_settings import LANGUAGES
from django.contrib.postgres.operations import BtreeGinExtension


def get_languages(apps, schema_editor):
    languages = apps.get_model('core', 'Language')
    for language in LANGUAGES:
        language_to_add = languages(name=language[1], short_name=language[0])
        if language[0] in ('en', 'ru', 'de', 'es'):
            language_to_add.active = True
        language_to_add.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        BtreeGinExtension(),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=10)),
                ('active', models.BooleanField(default=False)),
                ('regular', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.RunPython(get_languages),
        migrations.CreateModel(
            name='ErrorFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.FileField(max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url='/errors/', location='/usr/src/back/users/errors'), upload_to='%Y/%m/%d/')),
                # ('data', models.FileField(max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url='/errors/', location='C:\\Projects\\Abyss-Translate\\back\\users\\errors'), upload_to='%Y/%m/%d/')),
                ('error', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('codec', models.CharField(blank=True, max_length=20)),
                ('method', models.CharField(blank=True, max_length=10)),
                ('options', models.JSONField(null=True)),
                ('data', models.FileField(max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url='/users/', location='/usr/src/back/users'), upload_to=core.services.os_delete.DeleteInOS.file_name_from_instance)),
                # ('data', models.FileField(max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url='/users/', location='C:\\Projects\\Abyss-Translate\\back\\users'), upload_to=core.services.os_delete.DeleteInOS.file_name_from_instance)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('items', models.PositiveIntegerField(null=True)),
                ('words', models.PositiveIntegerField(null=True)),
                ('repo_sha', models.CharField(blank=True, max_length=40)),
                ('repo_status', models.BooleanField(null=True)),
                ('warning', models.CharField(blank=True, max_length=255)),
                ('error', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FileMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.CharField(db_index=True, max_length=255)),
                ('words', models.PositiveIntegerField()),
                ('search_words', models.TextField()),
                ('context', models.TextField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.file')),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=50)),
                ('repo_url', models.URLField(blank=True)),
                ('repo_status', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarkItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.PositiveIntegerField()),
                ('md5sum', models.CharField(max_length=32)),
                ('md5sum_clear', models.CharField(max_length=32)),
                ('words', models.PositiveIntegerField()),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.filemark')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('save_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('icon_chars', models.CharField(max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('lang_orig', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='projects', to='core.language')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('translate_to', models.ManyToManyField(related_name='projects_m', to='core.Language')),
            ],
            options={
                'permissions': [('creator', 'Can create projects and invite'), ('admin', 'Can manage projects where invited'), ('translator', 'Can translate files from projects where invited')],
            },
        ),
        migrations.CreateModel(
            name='Translate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('checked', models.BooleanField(default=False)),
                ('warning', models.CharField(blank=True, max_length=255)),
                ('checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checker', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.markitem')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.language')),
                ('translator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FolderRepo',
            fields=[
                ('folder', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.folder')),
                ('provider', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('path', models.CharField(blank=True, max_length=100)),
                ('branch', models.CharField(blank=True, max_length=100)),
                ('sha', models.CharField(blank=True, max_length=40, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('access', models.JSONField(null=True)),
                ('error', models.CharField(blank=True, max_length=255)),
                ('lang_in_suffix', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TranslateChangeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('translate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.translate')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.SmallIntegerField(choices=[(0, 'translator'), (5, 'invite'), (8, 'manage'), (9, 'admin')])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='folder',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project'),
        ),
        migrations.AddField(
            model_name='file',
            name='folder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.folder'),
        ),
        migrations.AddField(
            model_name='file',
            name='lang_orig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.language'),
        ),
        migrations.CreateModel(
            name='Translated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', models.PositiveIntegerField(default=0)),
                ('need_refresh', models.BooleanField(default=False)),
                ('translate_copy', models.FileField(blank=True, max_length=255, storage=django.core.files.storage.FileSystemStorage( base_url='/users/', location='/usr/src/back/users'), upload_to='')),
                # ('translate_copy', models.FileField(blank=True, max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url='/users/', location='C:\\Projects\\Abyss-Translate\\back\\users'), upload_to='')),
                ('repo_sha', models.CharField(blank=True, max_length=40)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.file')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.language')),
            ],
            options={
                'unique_together': {('file', 'language')},
            },
        ),
        # migrations.AddIndex(
        #     model_name='translate',
        #     index=django.contrib.postgres.indexes.GinIndex(fields=['text'], name='core_transl_text_gin'),
        # ),
        migrations.AddIndex(
            model_name='filemark',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_words'], name='core_marks_search_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='translate',
            unique_together={('item', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='projectpermission',
            unique_together={('user', 'project', 'permission')},
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('owner', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='markitem',
            unique_together={('mark', 'item_number')},
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together={('name', 'project'), ('position', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='filemark',
            unique_together={('file', 'fid')},
        ),
        migrations.AlterUniqueTogether(
            name='file',
            unique_together={('folder', 'name')},
        ),
    ]
